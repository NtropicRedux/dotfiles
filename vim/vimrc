call plug#begin('~/.vim/plugged')

  " Git support.
  Plug 'tpope/vim-fugitive'

  " A visual Git plugin to see what has changed in each file.
  Plug 'airblade/vim-gitgutter'

  " Visual plugin to show things such as the Vim mode.
  Plug 'vim-airline/vim-airline'

  " Prettier formatter.
  Plug 'prettier/vim-prettier'

  " Colorful rainbow bracket matching.
  Plug 'luochen1990/rainbow'

  " Monokai color scheme.
  Plug 'crusoexia/vim-monokai'

  " Collection of vim color schemes.
  Plug 'rafi/awesome-vim-colorschemes'

  " A color scheme based on monokai.
  Plug 'tomasr/molokai'

  " Markdown plugin.
  Plug 'godlygeek/tabular'
  Plug 'plasticboy/vim-markdown'

  " tmux plugin.
  Plug 'tmux-plugins/vim-tmux'

  " Fuzzy file finder.
  Plug 'junegunn/fzf', { 'do': { ->fzf#install() } }

  " Code completion.
  "  Plug 'ycm-core/youcompleteme'

  " File tree navigator.
  "Plug 'scrooloose/nerdtree'

  " Syntax checking through external syntax checkers.
  "  Plug 'vim-syntastic/syntastic'

  " Mappings to delete, change and add surrounding pairs (parens,
  " quotes, etc.)
  Plug 'tpope/vim-surround'

  " Comment keybinds.
  Plug 'tpope/vim-commentary'

  " Kitty syntax highlighting
  Plug 'fladson/vim-kitty'

  Plug 'yous/vim-open-color'

  " Common nvim LSP configuration
  Plug 'neovim/nvim-lspconfig'

  " Terraform language server
  Plug 'juliosueiras/terraform-lsp'

  " Dockerfile language server
  Plug 'rcjsuen/dockerfile-language-server-nodejs'

  " Go language server
  Plug 'fatih/vim-go'

  " Groovy language server
  Plug 'GroovyLanguageServer/groovy-language-server'

call plug#end()

filetype plugin indent on

" Enable syntax highlighting.
syntax on

" Set up the open-color theme.
" Use 24-bit (true-color) mode in Vim/Neovim when outside tmux or screen.
" If you're using tmux version 2.2 or later, you can remove the outermost $TMUX
" check and use tmux's 24-bit color support
" (http://sunaku.github.io/tmux-24bit-color.html#usage for more information.)
if empty($TMUX) && empty($STY)
  " See https://gist.github.com/XVilka/8346728.
  if $COLORTERM =~# 'truecolor' || $COLORTERM =~# '24bit'
    if has('termguicolors')
      " See :help xterm-true-color
      if $TERM =~# '^screen'
        let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
        let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
      endif
      set termguicolors
    endif
  endif
endif

colorscheme open-color
set background=dark
" Turn on line numbers.
set number

" Enable intelligent indentation.
set autoindent
set smartindent

" Set backspace for certain characters.
set backspace=indent,eol,start

" Set textwidth to be 72 and visual ruler to be +1 from that.
set textwidth=72
set cc=+1
"set colorcolumn=72

" Use spaces instead of tabs.
set tabstop=2
set shiftwidth=2
set expandtab
set smarttab
" set breakindent

" Show whitespace chars.
set list
set listchars=eol:$,tab:>-,trail:~

" Turn off automatic comment formatting.
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o formatoptions+=t

" Disable Background Color Erase (BCE) indefinitely, so that color
" schemes work properly when Vim is used inside tmux or GNU.
set t_ut=

"""
""" vim-markdown settings.
"""

" Disable folding.
let g:vim_markdown_folding_disabled = 1
" Disable concealing.
let g:vim_markdown_conceal = 0
let g:tex_conceal = ""
let g:vim_markdown_math = 1
let g:vim_markdown_conceal_code_blocks = 0
" Fix indentation.
let g:vim_markdown_new_list_item_indent = 0
" Follow anchors.
let g:vim_markdown_follow_anchor = 1
" Do not automatically insert bullet points.
let g:vim_markdown_auto_insert_bullets = 0

"""
""" vim-gitgutter settings
"""

function GitStatus()
  let [a,m,r] = GitGutterGetHunkSummary()
  return printf('+%d ~%d -%d', a, m, r)
endfunction
set statusline+=%{GitStatus()}

"""
""" vim-go settings
"""

let g:go_def_mode='gopls'
let g:go_info_mode='gopls'
